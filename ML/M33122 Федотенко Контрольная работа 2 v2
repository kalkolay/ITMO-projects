{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false},"colab":{"name":"M33122 Федотенко Контрольная работа 2 v2","provenance":[{"file_id":"1BKR1maK-SXUx2bqbgKN-OpsQrYsm1J3e","timestamp":1639384936057},{"file_id":"1GDjlD9K_RsnydSBl30O-XUCBIduMN4kv","timestamp":1639331996638},{"file_id":"1WkfEYHzFv-gCB2mSZzCKo64RCTzPKCqF","timestamp":1608106755039},{"file_id":"1C__qwW1XHxb8V1S-VBl0aUIs60C8i4XZ","timestamp":1603813504364},{"file_id":"13f5fqBM4UwfYNSlN875KVxhTK9m9T-Lv","timestamp":1596005590563},{"file_id":"1kqwKoBxu4k4IHygJbxVzPPzaLohsAB3m","timestamp":1595316081847}],"collapsed_sections":[]},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"54c611fdcd5240af95b92bb7ab43aef7":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_76008c82a0ae4b0ba554c66a8ac4d5ea","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_ef25ab68b084436bb554611b2424957a","IPY_MODEL_63150355b1cd400abe922004e5b974c6","IPY_MODEL_21a3ff06aaa14adbab3f105a6f10bd54"]}},"76008c82a0ae4b0ba554c66a8ac4d5ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ef25ab68b084436bb554611b2424957a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_eb32f4adaeaa4af9a2ad7ad3e42498f0","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3bc451fcd7234449afca62f78409fc52"}},"63150355b1cd400abe922004e5b974c6":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_7397c34c99a1439aac2a04f40ff5dc30","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":10000,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":10000,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_21cf6540a3284120ab669e29f0a4a14b"}},"21a3ff06aaa14adbab3f105a6f10bd54":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_f910a0347a48458dbb123a98485da792","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 10000/10000 [01:31&lt;00:00, 109.06it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_e22307689c5649e6be94eba8389a403f"}},"eb32f4adaeaa4af9a2ad7ad3e42498f0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"3bc451fcd7234449afca62f78409fc52":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7397c34c99a1439aac2a04f40ff5dc30":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"21cf6540a3284120ab669e29f0a4a14b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f910a0347a48458dbb123a98485da792":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"e22307689c5649e6be94eba8389a403f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"LYKqDli0Lqas"},"source":["# Рубежная контрольная работа\n","\n","Эту работу выполнять не обязательно. Баллы набранные за работу просуммируются с баллами, которые были набраны за контрольную работу 1 и выставлены как оценка за промежуточную аттестацию \"автоматом\". "]},{"cell_type":"markdown","metadata":{"id":"Cdt8kOfu4K3x"},"source":["Сделайте копию ноутбука\n","\n","Присвойте переменной `v` значение свой табельный номер ИСУ, это нужно для определения вашего варианта. Запустите код в следующей ячейке."]},{"cell_type":"code","metadata":{"id":"38Ryn8pjvYqb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639388676991,"user_tz":-180,"elapsed":274,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"b5509038-c86c-4919-efb9-030d8bbe0595"},"source":["from datetime import datetime\n","current_datetime = datetime.now()\n","print(current_datetime)\n","v = 242257 # по умолчанию вписан мой номер"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["2021-12-13 09:44:36.613654\n"]}]},{"cell_type":"markdown","metadata":{"id":"W85i4fC7srcf"},"source":["# Общее задание"]},{"cell_type":"markdown","metadata":{"id":"tIXprGNhsvTG"},"source":["Нужно решить задачу бинарной классификации, предварительно построив признаковое описание объектов на основе нескольких таблиц. \n","\n","Целевая переменная - пол клиента.\n","\n","В качестве модели нужно использовать нейронную сеть, которую нужно строить с помощью `keras` или `torch` на выбор студента."]},{"cell_type":"markdown","metadata":{"id":"G5nnK3tftPvc"},"source":["# Данные"]},{"cell_type":"markdown","metadata":{"id":"y8f3_l3KtSUh"},"source":["Для всех последующих заданий будем использовать обезличенные транзакционные банковские данные. Для этого считайте в переменные **transactions, tr_mcc_codes и gender_train** из одноимённых таблиц из папки data. Для таблицы transactions используйте только первые n=1000000 строк."]},{"cell_type":"markdown","metadata":{"id":"6gIKs_I-tr27"},"source":["Эти данные уже использовались в работе 2. Описание данных тут: https://drive.google.com/file/d/13sn8orjkoGfO1SVZYByXNmZQYFRfmOdp/view?usp=sharing\n","\n","Скачать данные отсюда: https://drive.google.com/drive/folders/1YAMe7MiTxA-RSSd8Ex2p-L0Dspe6Gs4L?usp=sharing"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"iJnLQ5IG9qny","executionInfo":{"status":"ok","timestamp":1639389949527,"user_tz":-180,"elapsed":230,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["transactions = pd.read_csv(\"https://www.dropbox.com/s/45v307iu86dy0oi/transactions.csv?dl=1\", nrows=1000000)\n","print(\"transactions:\")\n","display(transactions.head())\n","\n","tr_mcc_codes = pd.read_csv(\"https://www.dropbox.com/s/7zqd62w5m7p3ucr/tr_mcc_codes.csv?dl=1\", sep=';')\n","print(\"\\ntr_mcc_codes:\")\n","display(tr_mcc_codes.head())\n","\n","gender_train = pd.read_csv(\"https://www.dropbox.com/s/yeo6c1mmwqhx7y2/gender_train.csv?dl=1\")\n","print(\"\\ngender_train:\")\n","display(gender_train.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"yw9npxq39hbE","executionInfo":{"status":"ok","timestamp":1639389955290,"user_tz":-180,"elapsed":4930,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"b6e0f6d8-8b80-4366-f298-7ac9f148ebd7"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["transactions:\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>tr_datetime</th>\n","      <th>mcc_code</th>\n","      <th>tr_type</th>\n","      <th>amount</th>\n","      <th>term_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39026145</td>\n","      <td>0 10:23:26</td>\n","      <td>4814</td>\n","      <td>1030</td>\n","      <td>-2245.92</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>39026145</td>\n","      <td>1 10:19:29</td>\n","      <td>6011</td>\n","      <td>7010</td>\n","      <td>56147.89</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39026145</td>\n","      <td>1 10:20:56</td>\n","      <td>4829</td>\n","      <td>2330</td>\n","      <td>-56147.89</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>39026145</td>\n","      <td>1 10:39:54</td>\n","      <td>5499</td>\n","      <td>1010</td>\n","      <td>-1392.47</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>39026145</td>\n","      <td>2 15:33:42</td>\n","      <td>5499</td>\n","      <td>1010</td>\n","      <td>-920.83</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   customer_id tr_datetime  mcc_code  tr_type    amount term_id\n","0     39026145  0 10:23:26      4814     1030  -2245.92     NaN\n","1     39026145  1 10:19:29      6011     7010  56147.89     NaN\n","2     39026145  1 10:20:56      4829     2330 -56147.89     NaN\n","3     39026145  1 10:39:54      5499     1010  -1392.47     NaN\n","4     39026145  2 15:33:42      5499     1010   -920.83     NaN"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","tr_mcc_codes:\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mcc_code</th>\n","      <th>mcc_description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>742</td>\n","      <td>Ветеринарные услуги</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1711</td>\n","      <td>Генеральные подрядчики по вентиляции, теплосна...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1731</td>\n","      <td>Подрядчики по электричеству</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1799</td>\n","      <td>Подрядчики, специализированная торговля — нигд...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2741</td>\n","      <td>Разнообразные издательства/печатное дело</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   mcc_code                                    mcc_description\n","0       742                                Ветеринарные услуги\n","1      1711  Генеральные подрядчики по вентиляции, теплосна...\n","2      1731                        Подрядчики по электричеству\n","3      1799  Подрядчики, специализированная торговля — нигд...\n","4      2741           Разнообразные издательства/печатное дело"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","gender_train:\n"]},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10928546</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>69348468</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>61009479</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>74045822</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27979606</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   customer_id  gender\n","0     10928546       1\n","1     69348468       1\n","2     61009479       0\n","3     74045822       0\n","4     27979606       1"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"OFP_i1F1Lqay"},"source":["## Задание 1 (6 баллов)\n","\n","В задании требуется на основе нескольких таблиц с данными сделать признаковое описание объектов. \n","\n","Объектами являются клиенты. Клиенты идентифицируются с помощью `customer_id`, которые есть в таблицах **transactions** и **gender_train**. В качестве призаков нужно использовать даннее по категориям транзаций: ```mcc_code``` — mcc-код транзакции есть в таблицах **transactions** и **tr_mcc_codes**\n"]},{"cell_type":"markdown","metadata":{"id":"F57T22yav-gp"},"source":["Для выбора варианта, запустите код в следующей ячейке\n","\n"]},{"cell_type":"code","metadata":{"id":"zFcuNXzcwMbH","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"error","timestamp":1639389956247,"user_tz":-180,"elapsed":6,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"5eeb5e4a-a1dc-4b04-ed4e-501395ddd85d"},"source":["print ('Список категорий')\n","feature_list = ['Одежда (также нужно искать \"одежды\")', 'Аптеки', 'Ценные бумаги', 'Магазины косметики и Салоны красоты', 'Образовательные услуги (а также школы, университеты)',\n","                'Алименты', 'Прокат автомобилей', 'Автозапчасти, Автошины и Станции техобслуживания (а также СТО)', 'Видеоигры (искать надо по \"видеоигр\")',\n","                'Отели', 'Программирование', 'Спиртное и алкоголь', 'Предсказатели будущего', 'Азартные игры']\n","if (int(str(v)[4]) % 2) == 0:\n","  print (feature_list[::2])\n","else:\n","  print (feature_list[::-2])\n","\n","\n","if (int(str(v)[5]) % 2) == 0:\n","  print ('В качестве значений признаков используйте количество транзакций с тратами и количество транзакций с поступлениями')\n","else: \n","  print ('В качестве значений признаков используйте сумму по транзакциям с тратами и сумму по транзакциям с поступлениями')"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Список категорий\n"]},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-3bd0227f874f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m                 \u001b[0;34m'Алименты'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Прокат автомобилей'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Автозапчасти, Автошины и Станции техобслуживания (а также СТО)'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Видеоигры (искать надо по \"видеоигр\")'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                 'Отели', 'Программирование', 'Спиртное и алкоголь', 'Предсказатели будущего', 'Азартные игры']\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m   \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mfeature_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'v' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"3V5SzWwN7k8F"},"source":["Каждая категория может быть связана с одним или несколькими mcc-кодами. Например, вот несколько mcc-кодов по категории \"Одежда\": \n","* 5621; Готовая женская одежда\n","* 5641; Детская одежда\n","* 5651; Одежда для всей семьи"]},{"cell_type":"markdown","metadata":{"id":"xgFGtCDIvU4m"},"source":["Таким образом получится 14 признаков, то есть семь категорий, каждая из которых даст два значения: траты и поступления. Например, категория \"Одежда\" даёт признаки \"Одежда траты\" и \"Одежда поступления\"."]},{"cell_type":"markdown","metadata":{"id":"xGC6oWTyv9S4"},"source":["Сделайте нормализацию значений признаков так, чтобы все означения менялись от 0 до 1. "]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from tqdm.auto import tqdm\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"VHE3inbtwVSf","executionInfo":{"status":"ok","timestamp":1639389956635,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def get_cat(s):\n","  return tr_mcc_codes[tr_mcc_codes['mcc_description'].str.contains(s, case=False)]\n","\n","# 'Азартные игры', 'Спиртное и алкоголь', 'Отели', 'Автозапчасти, Автошины и Станции техобслуживания (а также СТО)', \n","# 'Алименты', 'Магазины косметики и Салоны красоты', 'Аптеки'\n","all_mcc = get_cat('(азартные игры|спиртное|алкоголь|отел|автозапчаст|автошин|станции техобслуживания|сто|алименты|магазины косметики|салоны красоты|аптек)')\n","\n","cat_games = get_cat('азартные игры')\n","cat_alcohol = get_cat('(спиртное|алкоголь)')\n","cat_hotels = get_cat('отел')\n","cat_vehicle = get_cat('(автозапчаст|автошин|станции техобслуживания|сто)')\n","cat_aliment = get_cat('алименты')\n","cat_beauty = get_cat('(магазины косметики|салоны красоты)')\n","cat_pharma = get_cat('аптек')\n","\n","arr = [cat_games, cat_alcohol, cat_hotels, cat_vehicle, cat_aliment, cat_beauty, cat_pharma]\n","\n","all_mcc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"PAMFCLxb-D4j","executionInfo":{"status":"ok","timestamp":1639389957466,"user_tz":-180,"elapsed":9,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"51fba4fe-d439-477b-b0e5-760890d7f151"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mcc_code</th>\n","      <th>mcc_description</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7</th>\n","      <td>3501</td>\n","      <td>Жилье — отели, мотели, курорты</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>4784</td>\n","      <td>Дорожный и мостовой сборы, пошлины</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>5047</td>\n","      <td>Стоматологическое/лабороторное/медицинское/офт...</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>5122</td>\n","      <td>Лекарства, их распространители, аптеки</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>5532</td>\n","      <td>Автошины</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>5533</td>\n","      <td>Автозапчасти и аксессуары</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>5541</td>\n","      <td>Станции техобслуживания</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>5812</td>\n","      <td>Места общественного питания, рестораны</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>5813</td>\n","      <td>Бары, коктейль-бары, дискотеки, ночные клубы и...</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>5814</td>\n","      <td>Рестораны, закусочные</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>5912</td>\n","      <td>Аптеки</td>\n","    </tr>\n","    <tr>\n","      <th>116</th>\n","      <td>5977</td>\n","      <td>Магазины косметики</td>\n","    </tr>\n","    <tr>\n","      <th>131</th>\n","      <td>7011</td>\n","      <td>Отели, мотели, базы отдыха, сервисы бронирования</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>7538</td>\n","      <td>СТО общего назначения</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>9211</td>\n","      <td>Судовые выплаты, включая алименты и детскую по...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     mcc_code                                    mcc_description\n","7        3501                     Жилье — отели, мотели, курорты\n","17       4784                 Дорожный и мостовой сборы, пошлины\n","29       5047  Стоматологическое/лабороторное/медицинское/офт...\n","37       5122             Лекарства, их распространители, аптеки\n","63       5532                                           Автошины\n","64       5533                          Автозапчасти и аксессуары\n","65       5541                            Станции техобслуживания\n","90       5812             Места общественного питания, рестораны\n","91       5813  Бары, коктейль-бары, дискотеки, ночные клубы и...\n","92       5814                              Рестораны, закусочные\n","94       5912                                             Аптеки\n","116      5977                                 Магазины косметики\n","131      7011   Отели, мотели, базы отдыха, сервисы бронирования\n","149      7538                              СТО общего назначения\n","179      9211  Судовые выплаты, включая алименты и детскую по..."]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["transactions = transactions[transactions.mcc_code.isin(all_mcc['mcc_code'].to_list())]\n","transactions[\"cat\"] = \"none\"\n","i = 0\n","for item in arr:\n","  i += 1\n","  transactions.loc[transactions.mcc_code.isin(item['mcc_code'].to_list()), 'cat'] = i\n","\n","transactions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"zbeXymEQBio-","executionInfo":{"status":"ok","timestamp":1639389960642,"user_tz":-180,"elapsed":264,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"6d98f5c3-efd2-47b2-f8bc-6ad5b027d535"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>tr_datetime</th>\n","      <th>mcc_code</th>\n","      <th>tr_type</th>\n","      <th>amount</th>\n","      <th>term_id</th>\n","      <th>cat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>39026145</td>\n","      <td>2 15:53:49</td>\n","      <td>5541</td>\n","      <td>1010</td>\n","      <td>-14643.37</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>39026145</td>\n","      <td>7 14:23:17</td>\n","      <td>5541</td>\n","      <td>1010</td>\n","      <td>-14643.37</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>39026145</td>\n","      <td>14 14:29:40</td>\n","      <td>5541</td>\n","      <td>1010</td>\n","      <td>-4873.64</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>39026145</td>\n","      <td>14 14:30:20</td>\n","      <td>5541</td>\n","      <td>1010</td>\n","      <td>-14643.37</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>39026145</td>\n","      <td>16 04:27:37</td>\n","      <td>5541</td>\n","      <td>1010</td>\n","      <td>-43391.09</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>999930</th>\n","      <td>98801178</td>\n","      <td>193 10:50:19</td>\n","      <td>5912</td>\n","      <td>1010</td>\n","      <td>-3952.81</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>999935</th>\n","      <td>98801178</td>\n","      <td>200 09:01:08</td>\n","      <td>5977</td>\n","      <td>1010</td>\n","      <td>-8354.81</td>\n","      <td>NaN</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>999961</th>\n","      <td>98801178</td>\n","      <td>243 00:00:00</td>\n","      <td>5541</td>\n","      <td>1110</td>\n","      <td>-21924.63</td>\n","      <td>RU650203</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>999981</th>\n","      <td>98801178</td>\n","      <td>253 00:00:00</td>\n","      <td>5541</td>\n","      <td>1110</td>\n","      <td>-29403.53</td>\n","      <td>RU650203</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>999992</th>\n","      <td>98801178</td>\n","      <td>266 15:59:55</td>\n","      <td>5912</td>\n","      <td>1010</td>\n","      <td>-14575.99</td>\n","      <td>177417</td>\n","      <td>7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>80777 rows × 7 columns</p>\n","</div>"],"text/plain":["        customer_id   tr_datetime  mcc_code  tr_type    amount   term_id cat\n","5          39026145    2 15:53:49      5541     1010 -14643.37       NaN   4\n","10         39026145    7 14:23:17      5541     1010 -14643.37       NaN   4\n","26         39026145   14 14:29:40      5541     1010  -4873.64       NaN   4\n","27         39026145   14 14:30:20      5541     1010 -14643.37       NaN   4\n","33         39026145   16 04:27:37      5541     1010 -43391.09       NaN   4\n","...             ...           ...       ...      ...       ...       ...  ..\n","999930     98801178  193 10:50:19      5912     1010  -3952.81       NaN   7\n","999935     98801178  200 09:01:08      5977     1010  -8354.81       NaN   6\n","999961     98801178  243 00:00:00      5541     1110 -21924.63  RU650203   4\n","999981     98801178  253 00:00:00      5541     1110 -29403.53  RU650203   4\n","999992     98801178  266 15:59:55      5912     1010 -14575.99    177417   7\n","\n","[80777 rows x 7 columns]"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["transactions[\"amount_plus\"] = transactions[transactions['amount'] >= 0]['amount']\n","transactions[\"amount_minus\"] = transactions[transactions['amount'] < 0]['amount']"],"metadata":{"id":"PLN0DatUBxU4","executionInfo":{"status":"ok","timestamp":1639389963001,"user_tz":-180,"elapsed":446,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["z = transactions.merge(gender_train, on='customer_id').groupby(['customer_id', 'cat']).agg({'amount_plus': \"sum\", \"amount_minus\": \"sum\"})\n","z"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"id":"VcDKuzvfCE6Q","executionInfo":{"status":"ok","timestamp":1639389963767,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"68010715-3e50-4348-c208-299bb888830c"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>amount_plus</th>\n","      <th>amount_minus</th>\n","    </tr>\n","    <tr>\n","      <th>customer_id</th>\n","      <th>cat</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">115617</th>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>-245824.92</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.0</td>\n","      <td>-473648.59</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">117556</th>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>-7669.80</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.0</td>\n","      <td>-50813.85</td>\n","    </tr>\n","    <tr>\n","      <th>189257</th>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>-89836.63</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99864691</th>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>-40686.79</td>\n","    </tr>\n","    <tr>\n","      <th>99900908</th>\n","      <th>7</th>\n","      <td>0.0</td>\n","      <td>-169167.10</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">99999680</th>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>-843519.51</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.0</td>\n","      <td>-4941.01</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.0</td>\n","      <td>-4401.99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2335 rows × 2 columns</p>\n","</div>"],"text/plain":["                 amount_plus  amount_minus\n","customer_id cat                           \n","115617      4            0.0    -245824.92\n","            6            0.0    -473648.59\n","117556      4            0.0      -7669.80\n","            7            0.0     -50813.85\n","189257      3            0.0     -89836.63\n","...                      ...           ...\n","99864691    4            0.0     -40686.79\n","99900908    7            0.0    -169167.10\n","99999680    4            0.0    -843519.51\n","            6            0.0      -4941.01\n","            7            0.0      -4401.99\n","\n","[2335 rows x 2 columns]"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["new_df = dict()\n","\n","for row in z.iterrows():\n","  key = row[0]\n","  value = row[1]\n","  customer_id = key[0]\n","  cat = key[1]\n","  amount_plus = value['amount_plus']\n","  amount_minus = value['amount_minus']\n","  \n","  if customer_id not in new_df:\n","    new_df[customer_id] = {\n","        **{f'amount_plus_{i}': 0.0 for i in range(1, 8, 1)}, \n","        **{f'amount_minus_{i}': 0.0 for i in range(1, 8, 1)}\n","    }\n","\n","  new_df[customer_id][f'amount_plus_{cat}'] = amount_plus\n","  new_df[customer_id][f'amount_minus_{cat}'] = amount_minus\n","\n","df = pd.DataFrame.from_dict(new_df, orient='index')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"JOC3zC8xCU58","executionInfo":{"status":"ok","timestamp":1639389965669,"user_tz":-180,"elapsed":245,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"d927026b-bb35-4c7e-d784-c7e5bd492129"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>amount_plus_1</th>\n","      <th>amount_plus_2</th>\n","      <th>amount_plus_3</th>\n","      <th>amount_plus_4</th>\n","      <th>amount_plus_5</th>\n","      <th>amount_plus_6</th>\n","      <th>amount_plus_7</th>\n","      <th>amount_minus_1</th>\n","      <th>amount_minus_2</th>\n","      <th>amount_minus_3</th>\n","      <th>amount_minus_4</th>\n","      <th>amount_minus_5</th>\n","      <th>amount_minus_6</th>\n","      <th>amount_minus_7</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>115617</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-245824.92</td>\n","      <td>0.0</td>\n","      <td>-473648.59</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>117556</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-7669.80</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-50813.85</td>\n","    </tr>\n","    <tr>\n","      <th>189257</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-89836.63</td>\n","      <td>-117057.13</td>\n","      <td>0.0</td>\n","      <td>-101930.89</td>\n","      <td>-179.67</td>\n","    </tr>\n","    <tr>\n","      <th>293048</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-105917.39</td>\n","      <td>0.0</td>\n","      <td>-68440.24</td>\n","      <td>-1392167.97</td>\n","    </tr>\n","    <tr>\n","      <th>350821</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-146777.56</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>99717689</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-719942.45</td>\n","      <td>-1423581.85</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-66542.00</td>\n","    </tr>\n","    <tr>\n","      <th>99859464</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-43598.84</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>99864691</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-40686.79</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>99900908</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-169167.10</td>\n","    </tr>\n","    <tr>\n","      <th>99999680</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-843519.51</td>\n","      <td>0.0</td>\n","      <td>-4941.01</td>\n","      <td>-4401.99</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>894 rows × 14 columns</p>\n","</div>"],"text/plain":["          amount_plus_1  amount_plus_2  ...  amount_minus_6  amount_minus_7\n","115617              0.0            0.0  ...      -473648.59            0.00\n","117556              0.0            0.0  ...            0.00       -50813.85\n","189257              0.0            0.0  ...      -101930.89         -179.67\n","293048              0.0            0.0  ...       -68440.24     -1392167.97\n","350821              0.0            0.0  ...            0.00      -146777.56\n","...                 ...            ...  ...             ...             ...\n","99717689            0.0            0.0  ...            0.00       -66542.00\n","99859464            0.0            0.0  ...            0.00            0.00\n","99864691            0.0            0.0  ...            0.00            0.00\n","99900908            0.0            0.0  ...            0.00      -169167.10\n","99999680            0.0            0.0  ...        -4941.01        -4401.99\n","\n","[894 rows x 14 columns]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df.index = df.index.rename('customer_id')\n","full_df = df.merge(gender_train, on='customer_id')\n","full_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"gn83G349CcdF","executionInfo":{"status":"ok","timestamp":1639389967859,"user_tz":-180,"elapsed":238,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"a278d21a-3617-4b6d-e6d4-fba7eb05240b"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customer_id</th>\n","      <th>amount_plus_1</th>\n","      <th>amount_plus_2</th>\n","      <th>amount_plus_3</th>\n","      <th>amount_plus_4</th>\n","      <th>amount_plus_5</th>\n","      <th>amount_plus_6</th>\n","      <th>amount_plus_7</th>\n","      <th>amount_minus_1</th>\n","      <th>amount_minus_2</th>\n","      <th>amount_minus_3</th>\n","      <th>amount_minus_4</th>\n","      <th>amount_minus_5</th>\n","      <th>amount_minus_6</th>\n","      <th>amount_minus_7</th>\n","      <th>gender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>115617</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-245824.92</td>\n","      <td>0.0</td>\n","      <td>-473648.59</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>117556</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-7669.80</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-50813.85</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>189257</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-89836.63</td>\n","      <td>-117057.13</td>\n","      <td>0.0</td>\n","      <td>-101930.89</td>\n","      <td>-179.67</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>293048</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-105917.39</td>\n","      <td>0.0</td>\n","      <td>-68440.24</td>\n","      <td>-1392167.97</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>350821</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-146777.56</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>99717689</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>-719942.45</td>\n","      <td>-1423581.85</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-66542.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>99859464</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-43598.84</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>891</th>\n","      <td>99864691</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-40686.79</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>892</th>\n","      <td>99900908</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-169167.10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>99999680</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>-843519.51</td>\n","      <td>0.0</td>\n","      <td>-4941.01</td>\n","      <td>-4401.99</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>894 rows × 16 columns</p>\n","</div>"],"text/plain":["     customer_id  amount_plus_1  ...  amount_minus_7  gender\n","0         115617            0.0  ...            0.00       1\n","1         117556            0.0  ...       -50813.85       0\n","2         189257            0.0  ...         -179.67       1\n","3         293048            0.0  ...     -1392167.97       0\n","4         350821            0.0  ...      -146777.56       0\n","..           ...            ...  ...             ...     ...\n","889     99717689            0.0  ...       -66542.00       1\n","890     99859464            0.0  ...            0.00       1\n","891     99864691            0.0  ...            0.00       1\n","892     99900908            0.0  ...      -169167.10       0\n","893     99999680            0.0  ...        -4401.99       1\n","\n","[894 rows x 16 columns]"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"fVA4eRP2C0N4","executionInfo":{"status":"ok","timestamp":1639389969939,"user_tz":-180,"elapsed":482,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["features = ['amount_plus_1', 'amount_plus_2', 'amount_plus_3',\n","       'amount_plus_4', 'amount_plus_5', 'amount_plus_6', 'amount_plus_7',\n","       'amount_minus_1', 'amount_minus_2', 'amount_minus_3', 'amount_minus_4',\n","       'amount_minus_5', 'amount_minus_6', 'amount_minus_7']\n","scaler = StandardScaler()\n","\n","scaler.fit(full_df[features])\n","\n","X = full_df[features].values\n","y = full_df['gender']\n","X.shape, y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n_ld-mVPC8DF","executionInfo":{"status":"ok","timestamp":1639389970705,"user_tz":-180,"elapsed":430,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"7eb5768c-2249-4f21-b294-2cd66e32b316"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((894, 14), (894,))"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.9, stratify=y)"],"metadata":{"id":"wv1hY83CDOGE","executionInfo":{"status":"ok","timestamp":1639389972724,"user_tz":-180,"elapsed":355,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":["## Вопросы к заданию 1"],"metadata":{"id":"_etoNdFXwY1y"}},{"cell_type":"markdown","source":["1. Для каждой категории выведите соответствующие ей mcc-коды с описаниями.\n","2. По какому признакому самое большое количество непустых значений?\n","3. По какой категории самая большая разница между мужчинами и женщинами?"],"metadata":{"id":"Mr3MfPI3viIx"}},{"cell_type":"code","source":["for i in range(len(arr)):\n","  print(arr[i], \"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"by6u80FIMybA","executionInfo":{"status":"ok","timestamp":1639389975265,"user_tz":-180,"elapsed":391,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"ec81f68c-043c-4ee9-ea98-5312942a6354"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Empty DataFrame\n","Columns: [mcc_code, mcc_description]\n","Index: [] \n","\n","    mcc_code                                    mcc_description\n","91      5813  Бары, коктейль-бары, дискотеки, ночные клубы и... \n","\n","     mcc_code                                   mcc_description\n","7        3501                    Жилье — отели, мотели, курорты\n","131      7011  Отели, мотели, базы отдыха, сервисы бронирования \n","\n","     mcc_code                                    mcc_description\n","17       4784                 Дорожный и мостовой сборы, пошлины\n","29       5047  Стоматологическое/лабороторное/медицинское/офт...\n","63       5532                                           Автошины\n","64       5533                          Автозапчасти и аксессуары\n","65       5541                            Станции техобслуживания\n","90       5812             Места общественного питания, рестораны\n","92       5814                              Рестораны, закусочные\n","149      7538                              СТО общего назначения \n","\n","     mcc_code                                    mcc_description\n","179      9211  Судовые выплаты, включая алименты и детскую по... \n","\n","     mcc_code     mcc_description\n","116      5977  Магазины косметики \n","\n","    mcc_code                         mcc_description\n","37      5122  Лекарства, их распространители, аптеки\n","94      5912                                  Аптеки \n","\n"]}]},{"cell_type":"markdown","source":["## Ответы:"],"metadata":{"id":"hv-KGcH7yLk-"}},{"cell_type":"markdown","source":["\n","Все результаты см. выше.\n","\n"],"metadata":{"id":"DIcrEdU2yOxb"}},{"cell_type":"markdown","metadata":{"id":"hiXRvXuACblp"},"source":["# Задание 2 (3 балла)"]},{"cell_type":"markdown","metadata":{"id":"RE1BmT7dCetf"},"source":["Модель - многослойная нейронная сеть минимум с двумя скрытыми слоями и с dropout. Количество нейронов в каждом слое выбираете самостоятельно.\n","Функции активации, метод оптимизации, скорость обучения, вероятность dropout - выбираете самостоятельно\n","\n","Модель нужно строить с помощью keras или torch\n","\n","Настроить параметры модели."]},{"cell_type":"code","source":["import torch\n","\n","X_train_tensor = torch.tensor(X_train.astype(np.float32))\n","y_train_tensor = torch.tensor(y_train.values.astype(np.int64))\n","train_ds = torch.utils.data.TensorDataset(X_train_tensor, y_train_tensor) \n","\n","X_test_tensor = torch.tensor(X_test.astype(np.float32))\n","y_test_tensor = torch.tensor(y_test.values.astype(np.int64))\n","test_ds = torch.utils.data.TensorDataset(X_test_tensor, y_test_tensor) \n","\n","len(train_ds), len(test_ds)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4lHactyVEDlX","executionInfo":{"status":"ok","timestamp":1639389978593,"user_tz":-180,"elapsed":343,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"536442c9-551d-4631-dadc-ca93464ddd95"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(804, 90)"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["train_loader = torch.utils.data.DataLoader(train_ds, batch_size=713, shuffle=True)\n","test_loader = torch.utils.data.DataLoader(test_ds, batch_size=181)"],"metadata":{"id":"ZFjPJ5WbI4Du","executionInfo":{"status":"ok","timestamp":1639389981040,"user_tz":-180,"elapsed":297,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["import torch.nn as nn\n","\n","model = nn.Sequential(\n","    nn.Linear(14, 64),\n","    nn.BatchNorm1d(64),\n","    nn.ReLU(),\n","    # nn.Dropout(p=0.2),\n","    nn.Linear(64, 64),\n","    nn.BatchNorm1d(64),\n","    nn.ReLU(),\n","    # nn.Dropout(p=0.2),\n","    nn.Linear(64, 2),\n","    # nn.Sigmoid()\n",")\n","\n","# model.cuda()\n","model.train()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WOpt4E4kI5Kr","executionInfo":{"status":"ok","timestamp":1639389983355,"user_tz":-180,"elapsed":245,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"296302aa-4622-43b5-a88d-fb881abcb14d"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sequential(\n","  (0): Linear(in_features=14, out_features=64, bias=True)\n","  (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  (2): ReLU()\n","  (3): Linear(in_features=64, out_features=64, bias=True)\n","  (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  (5): ReLU()\n","  (6): Linear(in_features=64, out_features=2, bias=True)\n",")"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["for p in model.parameters():\n","  p.requires_grad = True"],"metadata":{"id":"8m-a-INSKCoU","executionInfo":{"status":"ok","timestamp":1639389986376,"user_tz":-180,"elapsed":245,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["from torch.autograd import Variable\n","import torch.nn.functional as F\n","\n","\n","def compute_loss(X_batch, y_batch):\n","    X_batch = Variable(torch.FloatTensor(X_batch))#.cuda()\n","    y_batch = Variable(torch.LongTensor(y_batch))#.cuda()\n","    logits = model(X_batch)\n","    return F.cross_entropy(logits, y_batch).mean()"],"metadata":{"id":"97qYDWfeKDf_","executionInfo":{"status":"ok","timestamp":1639389988082,"user_tz":-180,"elapsed":235,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["EPOCHS = 10000\n","LR = 0.1\n","\n","loss = nn.CrossEntropyLoss()\n","opt = torch.optim.SGD(model.parameters(), lr=LR)\n","\n","loss_values = []\n","\n","for epoch in tqdm(range(EPOCHS)):\n","  \n","  for batch in train_loader:\n","\n","    loss_val = compute_loss(batch[0], batch[1])\n","    loss_val.backward()\n","\n","    opt.step()\n","    opt.zero_grad()\n","\n","    loss_values.append(loss_val.detach().cpu().item())\n","\n","\n","plt.plot(loss_values)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297,"referenced_widgets":["54c611fdcd5240af95b92bb7ab43aef7","76008c82a0ae4b0ba554c66a8ac4d5ea","ef25ab68b084436bb554611b2424957a","63150355b1cd400abe922004e5b974c6","21a3ff06aaa14adbab3f105a6f10bd54","eb32f4adaeaa4af9a2ad7ad3e42498f0","3bc451fcd7234449afca62f78409fc52","7397c34c99a1439aac2a04f40ff5dc30","21cf6540a3284120ab669e29f0a4a14b","f910a0347a48458dbb123a98485da792","e22307689c5649e6be94eba8389a403f"]},"id":"7tqETiCBKIpg","executionInfo":{"status":"ok","timestamp":1639390081591,"user_tz":-180,"elapsed":91357,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"2d6270af-157b-4477-a86b-e5324e6d6dbe"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"54c611fdcd5240af95b92bb7ab43aef7","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/10000 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## Вопросы к заданию 2"],"metadata":{"id":"VQXP8vbzxHQA"}},{"cell_type":"markdown","source":["1. Перечислите все гиперпараметры и их значения вот в таком формате (значения приведены примерные, у вас могут быть другие):\n","\n","* количество эпох: 5\n","* скорость обучения: 0.0001\n","* функция активация на скрытых слоях: ReLU\n","* и т.д.\n","\n","2. Сколько у вашей модели параметров?"],"metadata":{"id":"TWc06aYwxMcZ"}},{"cell_type":"markdown","source":["## Ответы:"],"metadata":{"id":"b7U1RuIYyQyE"}},{"cell_type":"markdown","source":["* количество эпох: 10000\n","* скорость обучения: 0.1\n","* функция активации: ReLU"],"metadata":{"id":"I5pJVKHwyTUH"}},{"cell_type":"markdown","metadata":{"id":"vjOJsBFsDOll"},"source":["# Задание 3 (2 балла)"]},{"cell_type":"markdown","metadata":{"id":"FXHBaQF1CnuI"},"source":["\n","Проверить качество модели не менее, чем на трёх разных метриках. "]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, classification_report\n","\n","model.eval()\n","\n","with torch.no_grad():\n","  for batch in test_loader:\n","\n","      y_pred = model(batch[0])\n","\n","      y_hat = torch.argmax(y_pred, dim=1).detach().cpu()\n","      \n","      print('Acc:', accuracy_score(y_hat, batch[1]))\n","      print(classification_report(y_hat, batch[1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2Kpo3U9KKrEg","executionInfo":{"status":"ok","timestamp":1639390105425,"user_tz":-180,"elapsed":250,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"9ec36acc-1c7c-4bf2-f965-e511659b5310"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Acc: 0.7666666666666667\n","              precision    recall  f1-score   support\n","\n","           0       0.77      0.79      0.78        47\n","           1       0.76      0.74      0.75        43\n","\n","    accuracy                           0.77        90\n","   macro avg       0.77      0.77      0.77        90\n","weighted avg       0.77      0.77      0.77        90\n","\n"]}]},{"cell_type":"markdown","source":["## Вопросы к заданию 3"],"metadata":{"id":"5iRvQtk9xv05"}},{"cell_type":"markdown","source":["1. Выведите значения метрик.\n","2. Как улучшить модель?\n","3. Для чего может понадобиться предсказание пола клиента по его транзакциям?"],"metadata":{"id":"K2Ahe-rjxyM9"}},{"cell_type":"markdown","source":["## Ответы:"],"metadata":{"id":"MnpAjlonyUSA"}},{"cell_type":"markdown","source":["\n","\n","1.   См. выше\n","2.   Попробовать обучить на большем числе тренировочных данных, попробовать другую функцию активации/метод оптимизации, увеличить число параметров\n","3.   Для восстановления демографического портрета клиента по истории транзакций, выявления закономерностей\n","\n"],"metadata":{"id":"gZzAgLvhRWbH"}},{"cell_type":"markdown","metadata":{"id":"jnuaWWNID2O8"},"source":["После завершения контрольной работы, дайте ссылку на colab в отдельном followup в своей теме на Piazza. Дайте разрешение на его просмотр.\n","\n","Не забудьте запустить код в последней ячейке для контроля времени выполнения."]},{"cell_type":"code","metadata":{"id":"fJ1wmMO4D8jN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639390135239,"user_tz":-180,"elapsed":261,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"10845c07-2837-43ae-c818-c9ff620ffb95"},"source":["from datetime import datetime\n","\n","current_datetime = datetime.now()\n","print(current_datetime)"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["2021-12-13 10:08:54.883436\n"]}]}]}