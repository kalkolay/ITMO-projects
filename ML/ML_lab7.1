{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ML_lab7.1","provenance":[{"file_id":"1OopyCF9iczPe-YSEoeuvInbtrh4T6bGG","timestamp":1639360453028},{"file_id":"13LvGfU8uIZ5jmVM4WdVA9KktFhwZLCHq","timestamp":1606675349064}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"vcnGdgw_YJ8u"},"source":["# PyTorch. Основы: синтаксис, torch.cuda и torch.autograd\n","\n","## Задание 7.1"]},{"cell_type":"code","metadata":{"id":"RtyozNmmYJ89","executionInfo":{"status":"ok","timestamp":1639362385018,"user_tz":-180,"elapsed":5688,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}}},"source":["import torch\n","import matplotlib.pyplot as plt"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ny4-Qi2wYJ-6"},"source":["### Задача 1"]},{"cell_type":"markdown","metadata":{"id":"IWxlFq0bYJ-_"},"source":["1). Создайте два вещественных тензора: `a` размером (3, 4) и `b` размером (12,)   \n","2). Создайте тензор `c`, являющийся тензором `b`, но размера (2, 2, 3)  \n","3). Выведите первый столбец матрицы `a` с помощью индексации"]},{"cell_type":"code","metadata":{"id":"3oxZuk3yYJ_A","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1639361575661,"user_tz":-180,"elapsed":378,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"6db5fad7-eb31-4f9c-f357-c25d89e36c73"},"source":["a = torch.rand(3, 4)\n","print(\"a:\", a.dtype, a.shape)\n","display(a)\n","\n","b = torch.rand(12,)\n","print(\"b:\", b.dtype, b.shape)\n","display(b)\n","\n","c = b.view(2, 2, 3)\n","print(\"c:\", c.dtype, c.shape)\n","display(c)"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["a: torch.float32 torch.Size([3, 4])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.8742, 0.8014, 0.7474, 0.1720],\n","        [0.5672, 0.3334, 0.8239, 0.0171],\n","        [0.0224, 0.8727, 0.8521, 0.3825]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["b: torch.float32 torch.Size([12])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([0.3013, 0.8859, 0.0182, 0.1300, 0.1445, 0.4826, 0.5644, 0.6171, 0.8203,\n","        0.0917, 0.9390, 0.2828])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["c: torch.float32 torch.Size([2, 2, 3])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[[0.3013, 0.8859, 0.0182],\n","         [0.1300, 0.1445, 0.4826]],\n","\n","        [[0.5644, 0.6171, 0.8203],\n","         [0.0917, 0.9390, 0.2828]]])"]},"metadata":{}}]},{"cell_type":"code","source":["a[:, 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_i4EqyZwkH7Y","executionInfo":{"status":"ok","timestamp":1639361579661,"user_tz":-180,"elapsed":369,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"ba68ba46-f45d-467f-a825-42fc52625b48"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0.8742, 0.5672, 0.0224])"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"D2IP_FrKYKAA"},"source":["### Задача 2"]},{"cell_type":"markdown","metadata":{"id":"tBZFbSYQYKAA"},"source":["1). Создайте два вещественных тензора: `a` размером (5, 2) и `b` размером (1,10)   \n","2). Создайте тензор `c`, являющийся тензором `b`, но размера (5, 2)  \n","3). Произведите все арифметические операции с тензорами `a` и `c`"]},{"cell_type":"code","metadata":{"id":"hzs2bH3GYKAB","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1639361775080,"user_tz":-180,"elapsed":421,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"6351dc4a-1bb4-4a52-c0ed-d31403ed94d3"},"source":["a = torch.rand(5, 2)\n","print(\"a:\", a.dtype, a.shape)\n","display(a)\n","\n","b = torch.rand(1, 10)\n","print(\"b:\", b.dtype, b.shape)\n","display(b)\n","\n","c = b.view(5, 2)\n","print(\"c:\", c.dtype, c.shape)\n","display(c)"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["a: torch.float32 torch.Size([5, 2])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.2708, 0.6555],\n","        [0.6311, 0.7511],\n","        [0.6149, 0.6304],\n","        [0.7039, 0.5292],\n","        [0.5425, 0.0853]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["b: torch.float32 torch.Size([1, 10])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.8293, 0.7037, 0.7612, 0.5368, 0.1099, 0.0991, 0.9362, 0.7934, 0.7154,\n","         0.2715]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["c: torch.float32 torch.Size([5, 2])\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.8293, 0.7037],\n","        [0.7612, 0.5368],\n","        [0.1099, 0.0991],\n","        [0.9362, 0.7934],\n","        [0.7154, 0.2715]])"]},"metadata":{}}]},{"cell_type":"code","source":["print(\"a + c:\")\n","display(a + c)\n","print(\"a - c:\")\n","display(a - c)\n","print(\"a * c:\")\n","display(a * c)\n","print(\"a / c:\")\n","display(a / c)\n","print(\"a % c:\")\n","display(a % c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"lGTGIp7ei-O1","executionInfo":{"status":"ok","timestamp":1639361778461,"user_tz":-180,"elapsed":420,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"e2a37012-fc53-4363-8442-3fbaa28f62ec"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["a + c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[1.1001, 1.3591],\n","        [1.3924, 1.2879],\n","        [0.7249, 0.7295],\n","        [1.6401, 1.3226],\n","        [1.2579, 0.3568]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["a - c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[-0.5585, -0.0482],\n","        [-0.1301,  0.2142],\n","        [ 0.5050,  0.5313],\n","        [-0.2322, -0.2643],\n","        [-0.1728, -0.1861]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["a * c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.2246, 0.4612],\n","        [0.4805, 0.4032],\n","        [0.0676, 0.0625],\n","        [0.6590, 0.4199],\n","        [0.3881, 0.0232]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["a / c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.3266, 0.9315],\n","        [0.8291, 1.3990],\n","        [5.5937, 6.3601],\n","        [0.7519, 0.6669],\n","        [0.7584, 0.3144]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["a % c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[0.2708, 0.6555],\n","        [0.6311, 0.2142],\n","        [0.0653, 0.0357],\n","        [0.7039, 0.5292],\n","        [0.5425, 0.0853]])"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"rIaroFO6YKBT"},"source":["### Задача 3"]},{"cell_type":"markdown","metadata":{"id":"GfLHVvKvYKBT"},"source":["1). Создайте тензор *целых чисел* `images` размерности (100, 200, 200, 3) (можно интерпретировать это как 100 картинок размера 200х200 с тремя цветовыми каналами, то есть 100 цветных изображений 200х200). Заполните его нулями  \n","\n","2). Сделайте так, чтобы у $i$-ой по порядку картинки была нарисована белая полоса толщиной два пикселя в строках, которые соответствуют номеру картинки. Например, у 3-ей по порядку картинки белая полоска будет занимать 6 и 7 строки, у 99 - 198 и 199. Сделать белую строку можно, записав в ячейки тензора число 255 (по всем трём каналам). Выведите несколько примеров с помощью `pylot`  \n","\n","3). Посчитайте среднее тензора `images` по 1-ой оси (по сути - средняя картинка), умножьте полученный тензор на 70. Нарисуйте с помощью `pyplot`, должна получиться серая картинка (при взятии среднего нужно привести тензор к float с помощью `.float()`, при отрисовке обратно к int с помощью `.int()`)"]},{"cell_type":"code","metadata":{"id":"pZVGHEQQYKBU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639361990738,"user_tz":-180,"elapsed":415,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"0accb5bc-340a-4912-b2a9-18c1bee6ea58"},"source":["images = torch.IntTensor(100, 200, 200, 3).zero_()\n","print(\"images:\", images.dtype, images.shape)"],"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["images: torch.int32 torch.Size([100, 200, 200, 3])\n"]}]},{"cell_type":"code","source":["for i in range(images.shape[0]):\n","    images[i][2 * i :  2 * i + 2,:] = 255\n","\n","plt.imshow(images[3])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"uDvFrHnDluPn","executionInfo":{"status":"ok","timestamp":1639362146083,"user_tz":-180,"elapsed":404,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"c258f9db-99b6-4e37-e490-024675bedb59"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f4b2f411610>"]},"metadata":{},"execution_count":38},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.imshow(images[50])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"P9ARdbGPmdec","executionInfo":{"status":"ok","timestamp":1639362195135,"user_tz":-180,"elapsed":420,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"bcb376f3-c452-40fa-c331-7c5b64455539"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f4b2f3510d0>"]},"metadata":{},"execution_count":40},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAQEAAAD8CAYAAAB3lxGOAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAANKUlEQVR4nO3db6ie9X3H8ffHuPigE9Tpgn+XKGlBy8hUdLAqdltblbHUPXCRsblWFgUDGww27WCV7UnZ6oSy1hJZUGH1DxvWUFzVha0+mWuSVvxXrdFGTBaTqUO7tbQmfvfgvk57NznHk5zrvnKfnN/7BTf3df3uP9f35zn5cP05Xt9UFZLaddy0C5A0XYaA1DhDQGqcISA1zhCQGmcISI0bLASSXJnkxSQ7ktwy1HYk9ZMh/k4gyTLgu8DHgF3AVuC6qnp+4huT1MtQewKXADuq6pWq+jFwP7B2oG1J6uH4gb73TOC1sfVdwKVzvTmJf7YoDe+Nqjrt4MGhQmBeSdYD66e1falBr842OFQI7AbOHls/qxv7iaraCGwE9wSkaRrqnMBWYHWSVUmWA+uAzQNtS1IPg+wJVNX+JBuAR4FlwKaqem6IbUnqZ5BLhEdchIcD0tGwvaouPnjQvxiUGmcISI0zBKTGGQJS4wwBqXGGgNQ4Q0BqnCEgNc4QkBpnCEiNMwSkxhkCUuMMAalxhoDUOENAapwhIDXOEJAaZwhIjVtwCCQ5O8m/JXk+yXNJ/rgbvy3J7iRPdY+rJ1eupEnrc6PR/cCfVtW3kpwIbE/yePfaHVX1+f7lSRragkOgqvYAe7rl7yf5DqPOQ5KOIRM5J5BkJfArwH92QxuSPJ1kU5KTJ7ENScPoHQJJfh74Z+BPquod4E7gPGANoz2F2+f43Pok25Js61uDpIXr1Xcgyc8BXwMeraq/m+X1lcDXqurD83yPfQek4U2270CSAP8AfGc8AJKcPva2a4BnF7oNScPrc3Xg14DfB55J8lQ39hnguiRrgAJ2Ajf2qlDSoGxDJrXDNmSSDmUISI0zBKTGGQJS4wwBqXGGgNQ4Q0BqnCEgNc4QkBpnCEiNMwSkxhkCUuMMAalxhoDUOENAapwhIDXOEJAaZwhIjTMEpMb1udEoAEl2At8HDgD7q+riJKcADwArGd1s9Nqq+p++25I0eZPaE/hoVa0Zu4nhLcCWqloNbOnWJS1CQx0OrAXu6ZbvAT450HYk9TSJECjgsSTbk6zvxlZ0DUsBXgdWHPwh25BJi0PvcwLAR6pqd5JfBB5P8sL4i1VVs/UVqKqNwEaw74A0Tb33BKpqd/e8D3gIuATYO9OOrHve13c7kobRKwSSfCDJiTPLwMcZ9R7cDFzfve164OE+25E0nL6HAyuAh0a9STke+EpVfT3JVuDBJDcArwLX9tyOpIHYi1Bqh70IJR3KEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA1zhCQGmcISI0zBKTGGQJS4wwBqXGGgNQ4Q0BqnCEgNc4QkBq34HsMJvkQo1ZjM84F/hI4Cfgj4L+78c9U1SMLrlDSoCZyj8Eky4DdwKXAp4D/rarPH8HnvcegNLxB7zH4G8DLVfXqhL5P0lEyqRBYB9w3tr4hydNJNiU5ebYP2IZMWhx6Hw4kWQ78F3BBVe1NsgJ4g1GPwr8GTq+qT8/zHR4OSMMb7HDgKuBbVbUXoKr2VtWBqnoPuItRWzJJi9QkQuA6xg4FZnoQdq5h1JZM0iLVqw1Z13/wY8CNY8N/k2QNo8OBnQe9JmmRsQ2Z1A7bkEk6lCEgNc4QkBpnCEiNMwSkxhkCUuMMAalxhoDUOENAapwhIDXOEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA17rBCoOsfsC/Js2NjpyR5PMlL3fPJ3XiSfCHJjq73wIVDFS+pv8PdE7gbuPKgsVuALVW1GtjSrcPoFuSru8d64M7+ZUoaymHdbbiqnkiy8qDhtcAV3fI9wL8Df96N31ujO5g+meSkJKdX1Z7320aSw69a0hGb66bCfW45vmLsH/brwIpu+UzgtbH37erG5gyBiy66iK1bt/YoRdJ8jjtu9h3/Xn0HZlRVHeltw5OsZ3S4wDnnnOOegDQlfUJg78xuftd1aF83vhs4e+x9Z3VjP6OqNgIbAZYvX15nnHFGj1IkLVSfENgMXA98rnt+eGx8Q5L7gUuBt+c7H/Duu++yZ8/7vkXSUKpq3gejXoN7gHcZHePfAPwCo6sCLwH/CpzSvTfAF4GXgWeAiw/j+8uHDx+DP7bN9u/PNmRSO2xDJulQhoDUOENAapwhIDXOEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA1zhCQGmcISI0zBKTGGQJS4wwBqXGGgNS4eUNgjhZkf5vkha7N2ENJTurGVyb5YZKnuseXhyxeUn+HsydwN4e2IHsc+HBV/TLwXeDWsdderqo13eOmyZQpaSjzhkBVPQG8ddDYY1W1v1t9klFvAUnHoEmcE/g08C9j66uSfDvJN5JcNoHvlzSgXm3IkvwFsB/4x25oD3BOVb2Z5CLgq0kuqKp3ZvnsT9qQSZqeBe8JJPlD4LeA36uZDiJVP6qqN7vl7YwakHxwts9X1caquni2+6BLOnoWFAJJrgT+DPjtqvrB2PhpSZZ1y+cCq4FXJlGopGHMeziQ5D7gCuDUJLuAzzK6GnAC8HjXTfjJ7krA5cBfJXkXeA+4qaremvWLJS0KtiGT2mEbMkmHMgSkxhkCUuMMAalxhoDUOENAapwhIDXOEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA1zhCQGmcISI0zBKTGLbQN2W1Jdo+1G7t67LVbk+xI8mKSTwxVuKTJWGgbMoA7xtqNPQKQ5HxgHXBB95kvzdx9WNLitKA2ZO9jLXB/13/ge8AO4JIe9UkaWJ9zAhu6rsSbkpzcjZ0JvDb2nl3dmKRFaqEhcCdwHrCGUeux24/0C5KsT7ItybYF1iBpAhYUAlW1t6oOVNV7wF38dJd/N3D22FvP6sZm+w7bkEmLwELbkJ0+tnoNMHPlYDOwLskJSVYxakP2zX4lShrSQtuQXZFkDVDATuBGgKp6LsmDwPOMuhXfXFUHhild0iTYhkxqh23IJB3KEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA1zhCQGmcISI0zBKTGGQJS4wwBqXGGgNQ4Q0BqnCEgNc4QkBq30DZkD4y1INuZ5KlufGWSH4699uUhi5fU37w3GmXUhuzvgXtnBqrqd2eWk9wOvD32/peras2kCpQ0rHlDoKqeSLJytteSBLgW+PXJliXpaOl7TuAyYG9VvTQ2tirJt5N8I8llPb9f0sAO53Dg/VwH3De2vgc4p6reTHIR8NUkF1TVOwd/MMl6YH3P7UvqacF7AkmOB34HeGBmrOtG/Ga3vB14GfjgbJ+3DZm0OPQ5HPhN4IWq2jUzkOS0JMu65XMZtSF7pV+JkoZ0OJcI7wP+A/hQkl1JbuheWsfPHgoAXA483V0y/Cfgpqp6a5IFS5os25BJ7bANmaRDGQJS4wwBqXGGgNQ4Q0BqnCEgNc4QkBpnCEiNMwSkxhkCUuMMAalxhoDUOENAapwhIDXOEJAaZwhIjTMEpMYZAlLjDAGpcYaA1DhDQGqcISA1rm8bskl5A/i/7nmpOZWlOS9YunNbqvP6pdkGF0XfAYAk25ZiS7KlOi9YunNbqvOai4cDUuMMAalxiykENk67gIEs1XnB0p3bUp3XrBbNOQFJ07GY9gQkTcHUQyDJlUleTLIjyS3TrqevJDuTPJPkqSTburFTkjye5KXu+eRp1zmfJJuS7Evy7NjYrPPIyBe6n+HTSS6cXuXzm2NutyXZ3f3cnkpy9dhrt3ZzezHJJ6ZT9XCmGgJJlgFfBK4CzgeuS3L+NGuakI9W1Zqxy0y3AFuqajWwpVtf7O4GrjxobK55XAWs7h7rgTuPUo0LdTeHzg3gju7ntqaqHgHofh/XARd0n/lS93u7ZEx7T+ASYEdVvVJVPwbuB9ZOuaYhrAXu6ZbvAT45xVoOS1U9Abx10PBc81gL3FsjTwInJTn96FR65OaY21zWAvdX1Y+q6nvADka/t0vGtEPgTOC1sfVd3dixrIDHkmxPsr4bW1FVe7rl14EV0ymtt7nmsVR+jhu6w5lNY4dsS2Vuc5p2CCxFH6mqCxntIt+c5PLxF2t0OeaYvySzVOYx5k7gPGANsAe4fbrlHD3TDoHdwNlj62d1Y8esqtrdPe8DHmK067h3Zve4e943vQp7mWsex/zPsar2VtWBqnoPuIuf7vIf83Obz7RDYCuwOsmqJMsZnYDZPOWaFizJB5KcOLMMfBx4ltGcru/edj3w8HQq7G2ueWwG/qC7SvCrwNtjhw3HhIPOYVzD6OcGo7mtS3JCklWMTn5+82jXN6Sp/l+EVbU/yQbgUWAZsKmqnptmTT2tAB5KAqP/tl+pqq8n2Qo8mOQG4FXg2inWeFiS3AdcAZyaZBfwWeBzzD6PR4CrGZ00+wHwqaNe8BGYY25XJFnD6BBnJ3AjQFU9l+RB4HlgP3BzVR2YRt1D8S8GpcZN+3BA0pQZAlLjDAGpcYaA1DhDQGqcISA1zhCQGmcISI37f6N94pu9j0EVAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.imshow(images[99])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"IdxZ5dxlmVbI","executionInfo":{"status":"ok","timestamp":1639362169135,"user_tz":-180,"elapsed":453,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"3792c145-d146-4abe-95a2-de6ab4d832df"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f4b2f3e9bd0>"]},"metadata":{},"execution_count":39},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.imshow((images.float().mean(0) * 70).int())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"W_AIa7jtmbXe","executionInfo":{"status":"ok","timestamp":1639362216622,"user_tz":-180,"elapsed":404,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"f1bd3fa9-94cf-4acb-d46e-6f5df57f16c7"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f4b2f2b0810>"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"oQnhq5ZdYKCu"},"source":["### Задача 4"]},{"cell_type":"markdown","metadata":{"id":"UB95BhgTYKCu"},"source":["- В Colab нажмите в меню сверху: `Runtime` -> `Change Runtime Type` -> `GPU`, где изначально стоит `None` (`Среда выполнение` - `Сменить среду выполнения`)\n","- Объявите тензор `a` размера (2, 3, 4) и тензор `b` размера (1, 8, 3) на GPU, иницилизируйте их случайно равномерно (`.uniform_()`)\n","- Затем измените форму тензора `b`, чтобы она совпадала с формой тензора `a`, получите тензор `c`  \n","- Переместите `c` на CPU, переместите `a` на CPU  \n","- Оберните их в `Variable()`\n","- Объявите тензор `L = torch.mean((c - a) `**` 2)` и посчитайте градиент `L` по `c` ( то есть $\\frac{\\partial{L}}{\\partial{c}})$\n","- Выведите градиент `L` по `c`"]},{"cell_type":"code","source":["torch.device('cuda:0')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"COCFfUKpnezE","executionInfo":{"status":"ok","timestamp":1639363076505,"user_tz":-180,"elapsed":218,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"883185a6-5f51-4261-8d58-70c075e6b75c"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["device(type='cuda', index=0)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"WESOm5TCYKCv","colab":{"base_uri":"https://localhost:8080/","height":306},"executionInfo":{"status":"ok","timestamp":1639362533337,"user_tz":-180,"elapsed":229,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"68187c54-9ca4-418f-c1b1-8e921a731386"},"source":["a = torch.rand(2, 3, 4).uniform_().cuda()\n","print(\"a:\")\n","display(a)\n","\n","b = torch.rand(1, 8, 3).uniform_().cuda()\n","print(\"b:\")\n","display(b)"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["a:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[[0.3591, 0.6323, 0.5061, 0.0661],\n","         [0.9744, 0.3803, 0.1441, 0.6214],\n","         [0.7943, 0.4164, 0.0621, 0.4868]],\n","\n","        [[0.3278, 0.8102, 0.3588, 0.5374],\n","         [0.9974, 0.9995, 0.1478, 0.2729],\n","         [0.3626, 0.7811, 0.8618, 0.9627]]], device='cuda:0')"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["b:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[[0.4859, 0.7348, 0.8470],\n","         [0.4050, 0.3088, 0.3413],\n","         [0.8163, 0.1249, 0.4676],\n","         [0.4185, 0.8736, 0.5079],\n","         [0.7670, 0.3025, 0.5148],\n","         [0.3594, 0.9102, 0.4473],\n","         [0.4510, 0.5027, 0.8801],\n","         [0.7084, 0.2478, 0.5098]]], device='cuda:0')"]},"metadata":{}}]},{"cell_type":"code","source":["c = b.reshape(a.shape)\n","a.size() == c.size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ow31sfsKn44E","executionInfo":{"status":"ok","timestamp":1639362580051,"user_tz":-180,"elapsed":229,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"a30a5c51-7c46-4b69-f61f-570dbedc33ad"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["c = c.cpu()\n","print(\"c:\", c.device)\n","\n","a = a.cpu()\n","print(\"a:\", a.device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bXh8iFyUn9Wp","executionInfo":{"status":"ok","timestamp":1639362737919,"user_tz":-180,"elapsed":218,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"10b4c37e-c52c-4fc7-94cd-35d0b1330d5d"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["c: cpu\n","a: cpu\n"]}]},{"cell_type":"code","source":["from torch.autograd import Variable\n","\n","a = Variable(a)\n","print(\"a:\")\n","display(a)\n","\n","c = Variable(c, requires_grad=True)\n","print(\"c:\")\n","display(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"a3_xZmtWomQ-","executionInfo":{"status":"ok","timestamp":1639362945428,"user_tz":-180,"elapsed":229,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"43190307-9ad4-4046-9e5b-3a2859b1c054"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["a:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[[0.3591, 0.6323, 0.5061, 0.0661],\n","         [0.9744, 0.3803, 0.1441, 0.6214],\n","         [0.7943, 0.4164, 0.0621, 0.4868]],\n","\n","        [[0.3278, 0.8102, 0.3588, 0.5374],\n","         [0.9974, 0.9995, 0.1478, 0.2729],\n","         [0.3626, 0.7811, 0.8618, 0.9627]]])"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["c:\n"]},{"output_type":"display_data","data":{"text/plain":["tensor([[[0.4859, 0.7348, 0.8470, 0.4050],\n","         [0.3088, 0.3413, 0.8163, 0.1249],\n","         [0.4676, 0.4185, 0.8736, 0.5079]],\n","\n","        [[0.7670, 0.3025, 0.5148, 0.3594],\n","         [0.9102, 0.4473, 0.4510, 0.5027],\n","         [0.8801, 0.7084, 0.2478, 0.5098]]], requires_grad=True)"]},"metadata":{}}]},{"cell_type":"code","source":["L = torch.mean((c - a)**2)\n","L.backward()\n","\n","display(c.grad)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":136},"id":"Q_LLJcF-pKro","executionInfo":{"status":"ok","timestamp":1639363110805,"user_tz":-180,"elapsed":230,"user":{"displayName":"Nikolay Fedotenko","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhPGaQI6m6d9SuKFoW5y_zehZfJi0hx8hBQHnOq=s64","userId":"02883025830709335153"}},"outputId":"cb344c74-16fb-4d9f-faf9-c089212bd2c4"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["tensor([[[ 0.0211,  0.0171,  0.0568,  0.0565],\n","         [-0.1109, -0.0065,  0.1120, -0.0827],\n","         [-0.0545,  0.0004,  0.1352,  0.0035]],\n","\n","        [[ 0.0732, -0.0846,  0.0260, -0.0297],\n","         [-0.0145, -0.0920,  0.0505,  0.0383],\n","         [ 0.0862, -0.0121, -0.1023, -0.0755]]])"]},"metadata":{}}]}]}